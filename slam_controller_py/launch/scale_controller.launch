<launch>
	<!-- Launches the AR.Drone driver -->
	<node name="ardrone_driver" pkg="ardrone_autonomy" type="ardrone_driver"
		  output="screen" clear_params="true">
	    <!-- If we are flying outdoors, will select more aggressive default settings -->
	    <param name="outdoor" value="0" />

	    <!-- Changes internal controller gains if we are flying without the propeller guard -->
	    <param name="flight_without_shell" value="0" />

	    <!-- in millimeters -->
	    <param name="altitude_max" value="3000" />
        <param name="altitude_min" value="50" />

        <!-- maximum allowable body angle in radians = 5 degrees -->
        <param name="euler_angle_max" value="0.1" />

        <!-- maximum z velocity in mm/sec = 0.2m/sec -->
        <param name="control_vz_max" value="200" />

	    <!-- maximum rotation rate in radians/sec = 40 degrees per second (1/9 rev/sec) -->
	    <param name="control_yaw" value="0.5" />

	    <!-- USE VERTICAL CAMERA -->
	    <!-- Detects an oriented roundel under the drone -->
	    <!-- <param name="detect_type" value="5" /> -->
	    <!-- Detect the oriented roundel marker (type 3) 8 = 2^3 -->
	    <!-- <param name="detections_select_v_hsync" value="8" /> -->

	    <!-- USE HORIZ CAMERA -->
	    <!-- The drone uses several detections at the same time -->
	    <param name="detect_type" value="10" />
	    <!-- Detects 2nd version of shell/tag in front of the drone -->
	    <!-- <param name="detect_type" value="8" /> -->
	    <!-- Detect the B&W oriented roundel marker (type 8) 256 = 2^8 -->
	    <param name="detections_select_h" value="256" />
	    <param name="detections_select_v_hsync" value="1" />

		<!-- In the horizontal camera, look for the orange-blue-orange markers -->
	    <!-- <param name="detections_select_h" value="32" /> -->

	    <!-- Orange-Blue-Orange = 3 -->
	    <!-- <param name="enemy_colors" value="3" />  -->

	    <!-- Detect the indoor stickers, rather than the outdoor hull -->
	    <!-- <param name="enemy_without_shell" value="0" />  -->
	</node>

	<!-- Launches the keyboard controller -->
	<node name="indep_controller" pkg="slam_controller_py" type="indep_controller.py" output="screen" required="true">
		  <!-- <remap from="/ardrone/image_raw" to="ORB_SLAM/Frame" /> -->
		<rosparam file="$(find slam_controller_py)/src/params.yaml" command="load" />
	</node>
</launch>
